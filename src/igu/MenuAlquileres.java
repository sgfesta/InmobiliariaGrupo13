package igu;

import entidades.Garante;
import entidades.Inquilino;
import entidades.Propiedad;
import entidades.TipoPropiedad;
import entidades.Zona;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import persistencia.ContratoData;
import persistencia.GaranteData;
import persistencia.InquilinoData;
import persistencia.PropiedadData;
import persistencia.TipoPropiedadData;
import persistencia.ZonaData;

public class MenuAlquileres extends javax.swing.JInternalFrame {

    ContratoData cd = new ContratoData();
    PropiedadData pd = new PropiedadData();
    Propiedad pSelect = new Propiedad();
    InquilinoData inquilinoD = new InquilinoData();
    GaranteData garanteD = new GaranteData();

    public MenuAlquileres() {
        initComponents();
        QuitarLaBarraTitulo();
        cargarComboTipo();
        cargarComboZona();

    }
    //defino dos métodosdentro del JInternalFrame y lo instanciamos de la siguiente manera.
    private JComponent Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
    private Dimension DimensionBarra = null;
//A continuación creamos una función dentro del mismo JInternalFrame como el ejemplo siguiente:

    public void QuitarLaBarraTitulo() {
        Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
        DimensionBarra = Barra.getPreferredSize();
        Barra.setSize(0, 0);
        Barra.setPreferredSize(new Dimension(0, 0));
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox3 = new javax.swing.JComboBox<>();
        jPCardAlquileres = new javax.swing.JPanel();
        jPBarraNavegador2 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLTituloAlquiler = new javax.swing.JLabel();
        jCFiltroTipoAlquiler = new javax.swing.JComboBox<>();
        jBNuevoAlquiler = new javax.swing.JButton();
        jLIDGaranteBuscado = new javax.swing.JLabel();
        jTIDInquilinoAlquiler = new javax.swing.JTextField();
        jTIDGaranteAlquiler = new javax.swing.JTextField();
        jLIDGaranteAlquilino = new javax.swing.JLabel();
        jLFechaInicioAlquiler = new javax.swing.JLabel();
        jLFechaFinAlquiler = new javax.swing.JLabel();
        jLFechaContratoAlquiler = new javax.swing.JLabel();
        jBSalirAlquiler = new javax.swing.JButton();
        jDFechaFinAlquiler = new com.toedter.calendar.JDateChooser();
        jDFechaInicioAlquiler = new com.toedter.calendar.JDateChooser();
        jDFechaContratoAlquiler = new com.toedter.calendar.JDateChooser();
        jCFiltroZonaalquiler = new javax.swing.JComboBox<>();
        jRPrecioAlquiler = new javax.swing.JRadioButton();
        jBFiltrarAlquiler = new javax.swing.JButton();
        jCListadoFiltradoPropiedadesAlquiler = new javax.swing.JComboBox<>();
        jTprecioAlquiler = new javax.swing.JTextField();
        jLFechaInicioAlquiler1 = new javax.swing.JLabel();
        jLTituloAlquiler1 = new javax.swing.JLabel();
        jLFechaInicioAlquiler2 = new javax.swing.JLabel();
        jLFechaInicioAlquiler3 = new javax.swing.JLabel();
        jLFechaInicioAlquiler4 = new javax.swing.JLabel();
        jbBuscarInquilino = new javax.swing.JButton();
        jbBuscarGarante = new javax.swing.JButton();
        jLIDInquilinoAlquiler = new javax.swing.JLabel();
        jLIDInquilinoBuscado = new javax.swing.JLabel();

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        jPCardAlquileres.setBackground(new java.awt.Color(55, 55, 55));
        jPCardAlquileres.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPBarraNavegador2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel28.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel28.setText("Inicio > Alquileres");

        javax.swing.GroupLayout jPBarraNavegador2Layout = new javax.swing.GroupLayout(jPBarraNavegador2);
        jPBarraNavegador2.setLayout(jPBarraNavegador2Layout);
        jPBarraNavegador2Layout.setHorizontalGroup(
            jPBarraNavegador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBarraNavegador2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(616, Short.MAX_VALUE))
        );
        jPBarraNavegador2Layout.setVerticalGroup(
            jPBarraNavegador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPCardAlquileres.add(jPBarraNavegador2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 8, 750, 30));

        jLTituloAlquiler.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLTituloAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jLTituloAlquiler.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTituloAlquiler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/White-contract_icon-icons.com_64813.png"))); // NOI18N
        jLTituloAlquiler.setText("  Inicio del Contrato");
        jLTituloAlquiler.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLTituloAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, -1));

        jCFiltroTipoAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jCFiltroTipoAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        jCFiltroTipoAlquiler.setForeground(new java.awt.Color(51, 51, 51));
        jPCardAlquileres.add(jCFiltroTipoAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 160, -1));

        jBNuevoAlquiler.setBackground(new java.awt.Color(51, 51, 51));
        jBNuevoAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jBNuevoAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jBNuevoAlquiler.setText("Nuevo");
        jBNuevoAlquiler.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBNuevoAlquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoAlquilerActionPerformed(evt);
            }
        });
        jPCardAlquileres.add(jBNuevoAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 570, 110, -1));

        jLIDGaranteBuscado.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLIDGaranteBuscado.setForeground(new java.awt.Color(51, 204, 255));
        jLIDGaranteBuscado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLIDGaranteBuscado.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLIDGaranteBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 390, 90, -1));

        jTIDInquilinoAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jTIDInquilinoAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jTIDInquilinoAlquiler.setForeground(new java.awt.Color(51, 51, 51));
        jPCardAlquileres.add(jTIDInquilinoAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 122, -1));

        jTIDGaranteAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jTIDGaranteAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jTIDGaranteAlquiler.setForeground(new java.awt.Color(51, 51, 51));
        jPCardAlquileres.add(jTIDGaranteAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, 122, -1));

        jLIDGaranteAlquilino.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLIDGaranteAlquilino.setForeground(new java.awt.Color(51, 204, 255));
        jLIDGaranteAlquilino.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLIDGaranteAlquilino.setText("DNI Garante");
        jLIDGaranteAlquilino.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLIDGaranteAlquilino, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 110, -1));

        jLFechaInicioAlquiler.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaInicioAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaInicioAlquiler.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaInicioAlquiler.setText("Precio a buscar");
        jLFechaInicioAlquiler.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaInicioAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 130, 30));

        jLFechaFinAlquiler.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaFinAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaFinAlquiler.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaFinAlquiler.setText("Fecha Fin");
        jLFechaFinAlquiler.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaFinAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 420, 140, 30));

        jLFechaContratoAlquiler.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaContratoAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaContratoAlquiler.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaContratoAlquiler.setText("Fecha Firma Contrato");
        jLFechaContratoAlquiler.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaContratoAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 180, -1));

        jBSalirAlquiler.setBackground(new java.awt.Color(51, 51, 51));
        jBSalirAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jBSalirAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jBSalirAlquiler.setText("Salir");
        jBSalirAlquiler.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSalirAlquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirAlquilerActionPerformed(evt);
            }
        });
        jPCardAlquileres.add(jBSalirAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 570, 100, -1));

        jDFechaFinAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jPCardAlquileres.add(jDFechaFinAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 156, -1));

        jDFechaInicioAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jPCardAlquileres.add(jDFechaInicioAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 156, -1));

        jDFechaContratoAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jPCardAlquileres.add(jDFechaContratoAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, 156, -1));

        jCFiltroZonaalquiler.setBackground(new java.awt.Color(153, 153, 153));
        jCFiltroZonaalquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jCFiltroZonaalquiler.setForeground(new java.awt.Color(51, 51, 51));
        jPCardAlquileres.add(jCFiltroZonaalquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 180, 30));

        jRPrecioAlquiler.setBackground(new java.awt.Color(51, 51, 51));
        jRPrecioAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jRPrecioAlquiler.setForeground(new java.awt.Color(51, 153, 255));
        jRPrecioAlquiler.setSelected(true);
        jRPrecioAlquiler.setText("Hasta");
        jRPrecioAlquiler.setOpaque(false);
        jRPrecioAlquiler.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRPrecioAlquilerStateChanged(evt);
            }
        });
        jPCardAlquileres.add(jRPrecioAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, -1, 30));

        jBFiltrarAlquiler.setBackground(new java.awt.Color(51, 51, 51));
        jBFiltrarAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        jBFiltrarAlquiler.setForeground(new java.awt.Color(51, 153, 255));
        jBFiltrarAlquiler.setText("Filtrar");
        jBFiltrarAlquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFiltrarAlquilerActionPerformed(evt);
            }
        });
        jPCardAlquileres.add(jBFiltrarAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 80, -1));

        jCListadoFiltradoPropiedadesAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jCListadoFiltradoPropiedadesAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jCListadoFiltradoPropiedadesAlquiler.setForeground(new java.awt.Color(51, 51, 51));
        jCListadoFiltradoPropiedadesAlquiler.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCListadoFiltradoPropiedadesAlquilerItemStateChanged(evt);
            }
        });
        jPCardAlquileres.add(jCListadoFiltradoPropiedadesAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 250, 30));

        jTprecioAlquiler.setBackground(new java.awt.Color(153, 153, 153));
        jTprecioAlquiler.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        jTprecioAlquiler.setForeground(new java.awt.Color(102, 204, 255));
        jTprecioAlquiler.setText("Precio");
        jTprecioAlquiler.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTprecioAlquilerFocusGained(evt);
            }
        });
        jTprecioAlquiler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTprecioAlquilerKeyTyped(evt);
            }
        });
        jPCardAlquileres.add(jTprecioAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 130, 30));

        jLFechaInicioAlquiler1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaInicioAlquiler1.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaInicioAlquiler1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaInicioAlquiler1.setText("Fecha Inicio");
        jLFechaInicioAlquiler1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaInicioAlquiler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 140, 30));

        jLTituloAlquiler1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLTituloAlquiler1.setForeground(new java.awt.Color(51, 204, 255));
        jLTituloAlquiler1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTituloAlquiler1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/White-contract_icon-icons.com_64813.png"))); // NOI18N
        jLTituloAlquiler1.setText("  Formulario Alquiler");
        jLTituloAlquiler1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLTituloAlquiler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 68, -1, -1));

        jLFechaInicioAlquiler2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaInicioAlquiler2.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaInicioAlquiler2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaInicioAlquiler2.setText("Elegir Propiedad");
        jLFechaInicioAlquiler2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaInicioAlquiler2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 140, 30));

        jLFechaInicioAlquiler3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaInicioAlquiler3.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaInicioAlquiler3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaInicioAlquiler3.setText("Tipo Propiedad");
        jLFechaInicioAlquiler3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaInicioAlquiler3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 140, 30));

        jLFechaInicioAlquiler4.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLFechaInicioAlquiler4.setForeground(new java.awt.Color(51, 204, 255));
        jLFechaInicioAlquiler4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLFechaInicioAlquiler4.setText("Ubicacion Propiedad");
        jLFechaInicioAlquiler4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLFechaInicioAlquiler4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 170, 30));

        jbBuscarInquilino.setBackground(new java.awt.Color(255, 153, 102));
        jbBuscarInquilino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/White-magnifier-search-zoom_110300.png"))); // NOI18N
        jbBuscarInquilino.setBorder(null);
        jbBuscarInquilino.setBorderPainted(false);
        jbBuscarInquilino.setOpaque(false);
        jbBuscarInquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarInquilinoActionPerformed(evt);
            }
        });
        jPCardAlquileres.add(jbBuscarInquilino, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 350, 30, -1));

        jbBuscarGarante.setBackground(new java.awt.Color(255, 153, 102));
        jbBuscarGarante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/White-magnifier-search-zoom_110300.png"))); // NOI18N
        jbBuscarGarante.setBorder(null);
        jbBuscarGarante.setBorderPainted(false);
        jbBuscarGarante.setOpaque(false);
        jbBuscarGarante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarGaranteActionPerformed(evt);
            }
        });
        jPCardAlquileres.add(jbBuscarGarante, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 350, 30, -1));

        jLIDInquilinoAlquiler.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLIDInquilinoAlquiler.setForeground(new java.awt.Color(51, 204, 255));
        jLIDInquilinoAlquiler.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLIDInquilinoAlquiler.setText("DNI Inquilino");
        jLIDInquilinoAlquiler.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLIDInquilinoAlquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 110, -1));

        jLIDInquilinoBuscado.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLIDInquilinoBuscado.setForeground(new java.awt.Color(51, 204, 255));
        jLIDInquilinoBuscado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLIDInquilinoBuscado.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPCardAlquileres.add(jLIDInquilinoBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, 160, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPCardAlquileres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPCardAlquileres, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBNuevoAlquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoAlquilerActionPerformed
        agregarContrato();
    }//GEN-LAST:event_jBNuevoAlquilerActionPerformed

    private void jBFiltrarAlquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFiltrarAlquilerActionPerformed

        if (jTprecioAlquiler.getText().equals("Precio") || jTprecioAlquiler.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo 'Precio de Alquiler' debe ser modificado. No puede estar vacío ni contener la palabra 'Precio'.");
        } else {

            filtrarPropiedades();

            //no se usa mas
//            if (jRPrecioAlquiler.isSelected()) {
//                filtrarHasta();
//            } else {
//                filtrarDesde();
//            }
        }


    }//GEN-LAST:event_jBFiltrarAlquilerActionPerformed

    private void jRPrecioAlquilerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRPrecioAlquilerStateChanged
        actualizarPrecio();
    }//GEN-LAST:event_jRPrecioAlquilerStateChanged

    private void jBSalirAlquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirAlquilerActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "Estás seguro que quieres salir?", "Cerrar Ventana", JOptionPane.YES_NO_OPTION);

        if (respuesta == JOptionPane.YES_OPTION) {

            this.dispose();//cierro la ventana
        }
    }//GEN-LAST:event_jBSalirAlquilerActionPerformed

    private void jCListadoFiltradoPropiedadesAlquilerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCListadoFiltradoPropiedadesAlquilerItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            rellenarCampos();
        }

    }//GEN-LAST:event_jCListadoFiltradoPropiedadesAlquilerItemStateChanged

    private void jTprecioAlquilerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTprecioAlquilerKeyTyped
        //Solo dejo introducir numeros , puntos y comas
        int key = evt.getKeyChar();
        boolean numero = (key >= 48 && key <= 57) || key == 46 || key == 44;
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jTprecioAlquilerKeyTyped

    private void jTprecioAlquilerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTprecioAlquilerFocusGained
        jTprecioAlquiler.setText("");
    }//GEN-LAST:event_jTprecioAlquilerFocusGained

    private void jbBuscarInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarInquilinoActionPerformed

       String dniInquilino =jTIDInquilinoAlquiler.getText();
        Inquilino inquilinoSelecionado = inquilinoD.buscarInquilinoPorDni(dniInquilino);
        if (inquilinoSelecionado != null) {
            
            String mensaje = "Nombre : " + inquilinoSelecionado.getNombre() + "\n"
                    + "Apellido : " + inquilinoSelecionado.getApellido() + "\n"
                    + "Cuit : " + inquilinoSelecionado.getCuit() + "\n"
                    + "Lugar de Trabajo : " + inquilinoSelecionado.getLugarTrabajo();      
            jLIDInquilinoBuscado.setText(inquilinoSelecionado.getNombre()+" ,"+inquilinoSelecionado.getApellido());

            JOptionPane.showMessageDialog(null, mensaje, "Detalles del Inquilino", JOptionPane.INFORMATION_MESSAGE);
            
            
        } else {
                        JOptionPane.showMessageDialog(null, "No se encontro inquilino con ese DNI", "Sin Resultados", JOptionPane.INFORMATION_MESSAGE);
                        jLIDInquilinoBuscado.setText("");
        }
    }//GEN-LAST:event_jbBuscarInquilinoActionPerformed

    private void jbBuscarGaranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarGaranteActionPerformed
        String dniGarante = jTIDGaranteAlquiler.getText();
        Garante garanteSeleccionado = garanteD.buscarGarantePorDni(dniGarante);

        if (garanteSeleccionado != null) {
            
            String mensaje = "Nombre : " + garanteSeleccionado.getNombre() + "\n"
                    + "Apellido : " + garanteSeleccionado.getApellido() + "\n"
                    + "Dni : " + garanteSeleccionado.getDni() + "\n"
                    + "Domicilio : " + garanteSeleccionado.getDomicilio() + "\n"
                    + "Telefono : " + garanteSeleccionado.getTelefono();

            JOptionPane.showMessageDialog(null, mensaje, "Detalles del Garante", JOptionPane.INFORMATION_MESSAGE);
            jLIDGaranteBuscado.setText(garanteSeleccionado.getNombre()+" ,"+garanteSeleccionado.getApellido());
            
        } else {
                        JOptionPane.showMessageDialog(null, "No se encontro garante con ese DNI", "Sin Resultados", JOptionPane.INFORMATION_MESSAGE);
                        jLIDGaranteBuscado.setText("");
        }
    }//GEN-LAST:event_jbBuscarGaranteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBFiltrarAlquiler;
    private javax.swing.JButton jBNuevoAlquiler;
    private javax.swing.JButton jBSalirAlquiler;
    private javax.swing.JComboBox<TipoPropiedad> jCFiltroTipoAlquiler;
    private javax.swing.JComboBox<Zona> jCFiltroZonaalquiler;
    private javax.swing.JComboBox<Propiedad> jCListadoFiltradoPropiedadesAlquiler;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDFechaContratoAlquiler;
    private com.toedter.calendar.JDateChooser jDFechaFinAlquiler;
    private com.toedter.calendar.JDateChooser jDFechaInicioAlquiler;
    private javax.swing.JLabel jLFechaContratoAlquiler;
    private javax.swing.JLabel jLFechaFinAlquiler;
    private javax.swing.JLabel jLFechaInicioAlquiler;
    private javax.swing.JLabel jLFechaInicioAlquiler1;
    private javax.swing.JLabel jLFechaInicioAlquiler2;
    private javax.swing.JLabel jLFechaInicioAlquiler3;
    private javax.swing.JLabel jLFechaInicioAlquiler4;
    private javax.swing.JLabel jLIDGaranteAlquilino;
    private javax.swing.JLabel jLIDGaranteBuscado;
    private javax.swing.JLabel jLIDInquilinoAlquiler;
    private javax.swing.JLabel jLIDInquilinoBuscado;
    private javax.swing.JLabel jLTituloAlquiler;
    private javax.swing.JLabel jLTituloAlquiler1;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPBarraNavegador2;
    private javax.swing.JPanel jPCardAlquileres;
    private javax.swing.JRadioButton jRPrecioAlquiler;
    private javax.swing.JTextField jTIDGaranteAlquiler;
    private javax.swing.JTextField jTIDInquilinoAlquiler;
    private javax.swing.JTextField jTprecioAlquiler;
    private javax.swing.JButton jbBuscarGarante;
    private javax.swing.JButton jbBuscarInquilino;
    // End of variables declaration//GEN-END:variables

    public void cargarComboTipo() {

        TipoPropiedadData tipD = new TipoPropiedadData();
        ArrayList<TipoPropiedad> tipoProp = new ArrayList<>();

        for (TipoPropiedad tipo : tipD.listarTipoPropiedadesActivas()) {
            tipoProp.add(tipo);
            jCFiltroTipoAlquiler.addItem(tipo);

        }
    }

    public void cargarComboZona() {
        ZonaData zonaD = new ZonaData();
        ArrayList<Zona> Zonas = new ArrayList<>();

        for (Zona zon : zonaD.listarZona()) {
            Zonas.add(zon);
            jCFiltroZonaalquiler.addItem(zon);

        }
    }

    public void agregarContrato() {
        ContratoData cd = new ContratoData();

//        try {
//            if (!jTIDInquilinoAlquiler.getText().isEmpty() && !jTIDGaranteAlquiler.getText().isEmpty()) {
//                // habilitarBotones();
//                // Propiedad PSelec = (Propiedad) jCListaTipoPropiedades.getSelectedItem();
//
//                Contrato alquiler = (Contrato) jCListadoFiltradoPropiedadesAlquiler.getSelectedItem();
//
//                Propietario idprop = new Propietario();
//                idprop.setIdPropietario(Integer.parseInt(jTIDPropiedadAlquiler.getText()));
//
//                Propiedad idpro = new Propiedad();
//                idpro.setIdPropiedad(Integer.parseInt(jTIDPropietarioAlquiler.getText()));
//
//                Inquilino idinqui = new Inquilino();
//                idinqui.setIdInquilino(Integer.parseInt(jTIDInquilinoAlquiler.getText()));
//
//                Garante idgaran = new Garante();
//                idgaran.setIdGarante(Integer.parseInt(jTIDGaranteAlquiler.getText()));
//
//                Vendedor idven = new Vendedor();
//                idven.setIdVendedor(Integer.parseInt(jTIDVendedor.getText()));
//                int vendedor = Integer.parseInt(jTIDVendedor.getText());
//                LocalDate fechaInicio = jDFechaInicioAlquiler.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
//                LocalDate fechaFin = jDFechaFinAlquiler.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
//                LocalDate fechaContrato = jDFechaContratoAlquiler.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
//
//                boolean vigente = jRVigenciaAlquiler.isSelected();
//                boolean activo = jRActivoAlquiler.isSelected();
//                Contrato nuevo = new Contrato(idprop, idpro, idinqui, idgaran, idven, fechaInicio, fechaFin, fechaContrato, vigente, activo);
//                cd.guardarContrato(nuevo);
//                JOptionPane.showMessageDialog(this, "Alquiler realizado exitosamente");
//                limpiarCampos();
//                //  desHabilitarBotones();
//
//            } else {
//                JOptionPane.showMessageDialog(this, "No debe dejar campos vacios");
//            }
//
//        } catch (NullPointerException e) {
//            JOptionPane.showMessageDialog(this, "No debe dejar campos vacios");
//        }

    }

    public void actualizarPrecio() {
        if (jRPrecioAlquiler.isSelected()) {
            jRPrecioAlquiler.setText("Hasta");
        } else {
            jRPrecioAlquiler.setText("Desde");
        }
    }

    public void limpiarCampos() {

        jTIDInquilinoAlquiler.setText("");
        jTIDGaranteAlquiler.setText("");
        jDFechaInicioAlquiler.setDate(null);
        jDFechaFinAlquiler.setDate(null);
        jDFechaContratoAlquiler.setDate(null);
    }

//   
    public void rellenarCampos() {

        Propiedad propiedadSeleccionado = (Propiedad) jCListadoFiltradoPropiedadesAlquiler.getSelectedItem();

        if (propiedadSeleccionado != null) {

            NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(); // Formato de moneda
            currencyFormatter.setMaximumFractionDigits(2); // Establece la cantidad máxima de decimales

            String mensaje = "Sup Total: " + propiedadSeleccionado.getSuperficieTotal() + " m²\n"
                    + "Precio Tasado: " + currencyFormatter.format(propiedadSeleccionado.getPrecioTasado()) + "\n"
                    + "Antigüedad: " + propiedadSeleccionado.getAntiguedad() + " años\n"
                    + "Observaciones: " + propiedadSeleccionado.getObservaciones();

            JOptionPane.showMessageDialog(null, mensaje, "Detalles de la Propiedad", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void filtrarPropiedades() {
        TipoPropiedad tipoSelec = (TipoPropiedad) jCFiltroTipoAlquiler.getSelectedItem();
        Zona zonaSelec = (Zona) jCFiltroZonaalquiler.getSelectedItem();
        double precio = Double.parseDouble(jTprecioAlquiler.getText());
        jCListadoFiltradoPropiedadesAlquiler.removeAllItems();

        boolean resultadosEncontrados = false;

        for (Propiedad propiedades : pd.filtrado(tipoSelec, zonaSelec)) {
            if ((jRPrecioAlquiler.isSelected() && propiedades.getPrecioTasado() <= precio)
                    || (!jRPrecioAlquiler.isSelected() && propiedades.getPrecioTasado() >= precio)) {
                jCListadoFiltradoPropiedadesAlquiler.addItem(propiedades);
                resultadosEncontrados = true;
            }
        }

        if (!resultadosEncontrados) {
            // Si no se encontraron resultados
            JOptionPane.showMessageDialog(null, "No se encontraron propiedades que cumplan con los criterios de búsqueda.", "Sin Resultados", JOptionPane.INFORMATION_MESSAGE);
        }
    }


}
